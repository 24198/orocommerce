OroB2B\Bundle\ProductBundle\Entity\Product:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: sku
    properties:
        sku:
            - NotBlank: ~
            - Length:
                min: 3
                max: 255
        owner:
            - NotBlank: ~
        organization:
            - NotBlank: ~
        unitPrecisions:
            - Valid: ~
        prices:
            # We need to use Collection constraint instead of Valid constraint on collection type field,
            # because Valid constraint generate additional violation messages on each incorrect element of collection
            - Collection:
                fields:
                    product:
                        - NotBlank: ~
                    productSku:
                        - NotBlank: ~
                    priceList:
                        - NotBlank: ~
                    quantity:
                        - NotBlank: ~
                        - GreaterThanOrEqual:
                            value: 0
                    price:
                        - NotBlank: ~
                allowMissingFields: true
                allowExtraFields: true
            - OroB2B\Bundle\PricingBundle\Validator\Constraints\UniqueProductPrices: ~

OroB2B\Bundle\ProductBundle\Entity\ProductUnitPrecision:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
            fields: [ product, unit ]
    properties:
        precision:
            - NotBlank: ~
            - Range:
                min: 0
                max: 10
            - OroB2B\Bundle\ValidationBundle\Validator\Constraints\Integer: ~

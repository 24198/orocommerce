actions:
    orob2b_sale_expire_quote_action:
        label: orob2b.sale.quote.actions.quote_expire
        enabled: true
        applications: [backend]
        routes:
            - orob2b_sale_quote_view
        datagrids:
            - quotes-grid
        order: 10
        button_options:
            icon: icon-time
        frontend_options:
            confirmation: orob2b.sale.quote.actions.quote_expire_confirm
        preconditions:
            @equal: [$expired, false]
        functions:
            - @assign_value: [$expired, true]
            - @flash_message:
                message: orob2b.sale.quote.message.quote.expire.success
                type: 'info'
                message_parameters:
                    id: $id
            - @redirect:
                route: 'orob2b_sale_quote_index'

    orob2b_sale_notify_customer_by_email_action:
        label: orob2b.sale.quote.notify_customer.by_email.link.text
        applications: [backend, frontend]
        entities:
            - OroB2B\Bundle\SaleBundle\Entity\Quote
        order: 20
        acl_resource: oro_email_email_create

        button_options:
            icon: icon-envelope
            group: orob2b.sale.quote.notify_customer.label

        frontend_options:
            template: OroB2BSaleBundle:Action:emailNotification.html.twig
            title: orob2b.sale.quote.notify_customer.by_email.link.text
            options:
                allowMaximize: true
                allowMinimize: true
                dblclick: maximize
                maximizedHeightDecreaseBy: minimize-bar
                width: 1000

        attributes:
            email:
                label: ' '
                type: object
                options:
                    class: Oro\Bundle\EmailBundle\Form\Model\Email

        form_options:
            attribute_fields:
                email:
                    form_type: oro_email_email

        form_init:
            - @call_service_method:
                attribute: $.email
                service: orob2b_sale.helper.notification
                method: getEmailModel
                method_parameters: [$.data]
            - @call_service_method:
                attribute: $.appendSignature
                service: oro_config.user
                method: get
                method_parameters: ['oro_email.append_signature']

        functions:
            - @call_service_method:
                service: orob2b_sale.helper.notification
                method: send
                method_parameters: [$.email, $.data]

    orob2b_sale_send_no_quote_alert:
        label: orob2b.sale.quote.actions.send_no_quote_alert
        enabled: true
        applications: []
        order: 10
        functions:
            - @foreach:
                array: $accountUser.salesRepresentatives
                value: $.saleRep
                actions:
                    - @send_email_template:
                        conditions:
                            @not_empty: $accountUser.owner
                        parameters:
                            from: $accountUser.owner.email
                            to: $.saleRep.email
                            template: 'request_no_quote_alert'
                            entity: $.data
            - @call_method:
                object: $accountUser.salesRepresentatives
                method: toArray
                attribute: $.accountUserSalesReps
            - @foreach:
                array: $account.salesRepresentatives
                value: $.saleRep
                actions:
                    - @send_email_template:
                        conditions:
                            @and:
                                - @not_empty: $accountUser.owner
                                - @not_in: [$.saleRep, $.accountUserSalesReps]
                        parameters:
                            from: $accountUser.owner.email
                            to: $.saleRep.email
                            template: 'request_no_quote_alert'
                            entity: $.data

    orob2b_sale_frontend_quote_accept_and_submit_to_order:
        label: ' '
        applications: [frontend]
        enabled: true
        functions:
            - @assign_url:
                attribute: $.editLink
                route: orob2b_sale_quote_frontend_choice
                route_parameters: { 'id': $.quote.id }
            - @translate:
                attribute: $.sourceRemoveLabel
                id: orob2b.frontend.shoppinglist.quote.remove_source.label
            - @assign_value:
                conditions:
                   @empty: $.quote.shippingEstimate
                parameters: [$.disallow_shipping_method_edit, false]
            - @assign_value:
                conditions:
                   @not_empty: $.quote.shippingEstimate
                parameters: [$.disallow_shipping_method_edit, true]
            - @tree:
                conditions:
                    @not_empty: $.quote.shippingAddress
                actions:
                    - @create_entity:
                        attribute: $.orderAddress
                        class: OroB2B\Bundle\OrderBundle\Entity\OrderAddress
                        data:
                            accountAddress: $.quote.accountAddress
                            accountUserAddress: $.quote.accountUserAddress
                            label: $.quote.shippingAddress.label
                            organization: $.quote.shippingAddress.organization
                            street: $.quote.shippingAddress.street
                            street2: $.quote.shippingAddress.street2
                            city: $.quote.shippingAddress.city
                            postalCode: $.quote.shippingAddress.postalCode
                            country: $.quote.shippingAddress.country
                            region: $.quote.shippingAddress.region
                            regionText: $.quote.shippingAddress.regionText
                            namePrefix: $.quote.shippingAddress.namePrefix
                            firstName: $.quote.shippingAddress.firstName
                            middleName: $.quote.shippingAddress.middleName
                            lastName: $.quote.shippingAddress.lastName
                            nameSuffix: $.quote.shippingAddress.nameSuffix
                            phone: $.quote.shippingAddress.phone
                            fromExternalSource: true
                    - @assign_value:
                        parameters: [$.disallow_shipping_address_edit, true]
            - @tree:
                conditions:
                      @empty: $.quote.shippingAddress
                actions:
                    - @assign_value: [$.orderAddress, null]
                    - @assign_value:
                        parameters: [$.disallow_shipping_address_edit, false]
            - @assign_value:
                parameters: [$.shippingEstimate, $.quote.shippingEstimate]
            - @start_checkout:
                source_name: 'quote'
                source_entity: $.quote
                force: true
                data:
                    shippingAddress: $.orderAddress
                    shippingEstimate: $.shippingEstimate
                settings:
                    allow_source_remove: false
                    remove_source: false
                    source_remove_label: $.sourceRemoveLabel
                    edit_order_link: $.editLink
                    source_options: $.selectedItems
                    disallow_shipping_address_edit: $.disallow_shipping_address_edit
                    disallow_shipping_method_edit: $.disallow_shipping_method_edit

    orob2b_sale_frontend_quote_change:
          label: orob2b.frontend.sale.btn.accept_quote_create_order
          applications: [frontend]
          routes:
              - orob2b_sale_quote_frontend_view
          order: 20
          button_options:
              icon: icon-edit
              class:  quota-accept-btn
          functions:
              - @redirect:
                   parameters:
                       route: 'orob2b_sale_quote_frontend_choice'
                       route_parameters: {id: $.data.id}

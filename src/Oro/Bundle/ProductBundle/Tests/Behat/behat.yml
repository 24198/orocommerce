oro_behat_extension:
  elements:
    ProductNameField:
      selector: "input[name='oro_product[names][values][default]']"
    ProductPrimaryUnitField:
      selector: "select[name='oro_product[primaryUnitPrecision][unit]']"
    ProductAdditionalUnitField:
      selector: "select[name='oro_product[additionalUnitPrecisions][0][unit]']"
    OptionCollection:
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\OptionCollection

    Configurable Attributes:
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\ProductCustomVariantFieldsCollection
      selector: 'div[id^="oro_product_variantFields"]'

    ProductForm:
      selector: 'div#container'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          SKU: 'oro_product[sku]'
          Name: 'oro_product[names][values][default]'
          Status: 'oro_product[status]'
          PrimaryUnit: 'oro_product[primaryUnitPrecision][unit]'
          PrimaryPrecision: 'oro_product[primaryUnitPrecision][precision]'
          AdditionalUnit: 'oro_product[additionalUnitPrecisions][0][unit]'
          AdditionalPrecision: 'oro_product[additionalUnitPrecisions][0][precision]'
          Configurable Attributes:
            type: 'xpath'
            locator: '//div[@id[starts-with(.,"oro_product_variantFields-uid")]]'
            element: Configurable Attributes

    Product Family Form:
      selector: 'div#container'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Label: 'oro_attribute_family[labels][values][default]'

    QuickAddForm:
      selector: "form[name='oro_product_quick_add']"

    CreateOrderButton:
      selector: "a[title='Create Order']"

    EntityConfigForm:
      selector: "form[name='oro_entity_config_type']"

    ProductPriceCollection:
      class: 'Oro\Bundle\ProductBundle\Tests\Behat\Element\ProductPriceCollection'

    AdditionalUnitCollection:
      class: 'Oro\Bundle\ProductBundle\Tests\Behat\Element\AdditionalUnitCollection'

    Show Variants Dropdown:
      selector: ".content-variant-add-btn-container .dropdown-toggle"

    Product Collection Preview Grid:
      selector: 'div[id*="grid-product-collection-grid-"]'

    AdvancedFilter:
      selector: '.collapse-view__trigger.btn .fa-filter'

    Field Condition:
      selector: 'li[data-widget="fieldCondition"]'

    Drop condition here:
      selector: ".right-area"

    Choose a field..:
      selector: "#select2-drop-mask"

    AllAddedCounter:
      selector: 'a[data-role="tab-filtered"] span[data-role="counter"]'

    ExcludedCounter:
      selector: 'a[data-role="tab-excluded"] span[data-role="counter"]'

    ManuallyAddedCounter:
      selector: 'a[data-role="tab-included"] span[data-role="counter"]'

    ActiveGridFilters:
      selector: 'div.tab-pane.active div.filter-box'
      class: Oro\Bundle\DataGridBundle\Tests\Behat\Element\GridFilters

    PreviewResults:
      selector:
        type: xpath
        locator: '//a[contains(@class, "btn") and contains(., "Preview Results")]'

    SegmentName:
      selector: 'div.control-group:contains("Segment name") input[type="text"]'

    SegmentNameWithPlaceholder:
      selector: 'div.control-group:contains("Segment name") input[placeholder="Will be autogenerated"]'

    SegmentNameWithoutPlaceholder:
      selector: 'div.control-group:contains("Segment name") input:not([placeholder])'

    AddButton:
      selector: 'div.tab-pane.active a:contains("Add")'

    ActiveGrid:
      selector: 'div.tab-pane.active div.grid-container'
      class: Oro\Bundle\DataGridBundle\Tests\Behat\Element\Grid

    AddProductsPopup:
      selector: 'div.ui-dialog div.grid-container'
      class: Oro\Bundle\DataGridBundle\Tests\Behat\Element\Grid

    AddProductsPopupFilters:
      selector: 'div.ui-dialog div.filter-box'
      class: Oro\Bundle\DataGridBundle\Tests\Behat\Element\GridFilters

    Reset:
      selector: "a.btn.filter-reset"

    SKU:
      selector:
        type: xpath
        locator: '//div[contains(@class, "select2-result-label") and contains(., "SKU")]'

    Content Node Form:
      selector: 'form[name="oro_web_catalog_content_node"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Titles: 'oro_web_catalog_content_node[titles][values][default]'
          Url Slug: 'oro_web_catalog_content_node[slugPrototypesWithRedirect][slugPrototypes][values][default]'
          Meta Title: 'oro_web_catalog_content_node[metaTitles][values][default]'
          Meta Description: 'oro_web_catalog_content_node[metaDescriptions][values][default]'
          Meta Keywords: 'oro_web_catalog_content_node[metaKeywords][values][default]'
          Default Product Collection Segment Name:
            type: css
            locator: '.content-variant-item.content-variant-item-default [id*="productCollectionSegment_name"]'
          Product Collection Segment Name:
            type: css
            locator: '.content-variant-item:not([class*="content-variant-item-default"]) [id*="productCollectionSegment_name"]'

    RemoveFilterButton:
      selector: '.conditions-group .condition a.close'

    Page Templates Form:
      selector: 'form[name="theme"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Use Default: 'theme[oro_frontend___page_templates][use_parent_scope_value]'
          Product Page: 'theme[oro_frontend___page_templates][value][oro_product_frontend_product_view]'

    Remove Variant Button:
      selector: 'button.removeVariantBtn'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Element

    Remove First Product Collection Variant Button:
      selector: 'button.removeVariantBtn[data-related="oro_web_catalog_content_node[contentVariants][0]"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Element

    Search Button:
      selector: 'button[name="oro_website_search_search_button"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Element

    Galery View Button:
      selector:
        type: xpath
        locator: '//a[contains (@data-catalog-view-trigger,"gallery-view")]'
    NoImage View Button:
      selector:
        type: xpath
        locator: '//a[contains (@data-catalog-view-trigger,"no-image-view")]'
    List View Button:
      selector:
        type: xpath
        locator: '//a[contains (@data-catalog-view-trigger,"list-view")]'

    NewArrivalStiker:
      selector: '.product-sticker--icon-new_arrival'

    NewArrivalText:
      selector: '.product-sticker--text-new_arrival'

    ViewDetails:
      selector: 'a.view-product'

    ProductItem:
      selector: 'div.product-item'

    Product Collection Variant Label:
      selector:
        type: 'xpath'
        locator: '//h5[contains(., "Product Collection")]'

    Edit within Web Catalog:
      selector: 'a.operation-button[title="Edit within Web Catalog"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Element

    AttributeGroupCollection:
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\AttributeGroupCollection

    Line Item Form:
      selector: 'div.line-item-form'
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\LineItemForm

    Default Page:
      selector: '.product-view__attributes-container'
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\DefaultTemplate

    Short Page:
      selector: '.product-view.short-theme'
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\ShortTemplate

    List Page:
      selector: '.product-view__additional'
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\ListTemplate

    Two Columns Page:
      selector: '.product-view__attribute-box-wrapper'
      class: Oro\Bundle\ProductBundle\Tests\Behat\Element\TwoColumnsTemplate

    Default Page Prices:
      selector: '.product-prices__table'

    Short Page Prices:
      selector: '.product-view__content .product-price'

    List Page Prices:
      selector: '.product-view__content .product-price'

    Two Columns Page Prices:
      selector: '.product-view__content .product-price'

    Color Product Attribute:
      selector: 'input[name="oro_product[variantFields][Color][is_selected]"]'

    Promotions Form:
      selector: 'form[name="product_promotions"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Show On Product View Default: 'product_promotions[oro_product___product_promotion_show_on_product_view][use_parent_scope_value]'
          Show On Product View: 'product_promotions[oro_product___product_promotion_show_on_product_view][value]'

    MassActionLimit:
      selector: 'input[id*="mass_action_limitation_value"]'

    GridPagination:
      selector: 'div.tab-pane.active div.toolbar div.pagination input'

  suites:
    # Revert by OPI-52
    OroProductBundle:
      contexts:
        - OroApplicationBundle::CommerceMainContext
        - OroDataGridBundle::GridContext
        - OroFormBundle::FormContext
        - OroProductBundle::FeatureContext
        - OroRedirectBundle::SlugPrototypesContext
        - OroSecurityBundle::ACLContext
        - OroSEOBundle::FeatureContext
        - Oro\Bundle\TestFrameworkBundle\Tests\Behat\Context\OroMainContext
        - OroWebCatalogBundle::FeatureContext
        - OroConfigBundle::FeatureContext
        - OroUserBundle::FeatureContext
      paths:
        - '@OroProductBundle/Tests/Behat/Features/product-collection'
        - '@OroProductBundle/Tests/Behat/Features/product'
        - '@OroProductBundle/Tests/Behat/Features/other'

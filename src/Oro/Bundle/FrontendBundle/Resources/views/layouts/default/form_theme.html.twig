{% extends 'OroFormBundle:layouts/blank:form_theme.html.twig' %}

{%- block form_label -%}
    {% set label_attr = layout_attr_defaults(label_attr, {
    '~class': ' label label--full'
    }) %}

    {% spaceless %}
        {% if label is not sameas(false) %}
            {% if not compound %}
                {% set label_attr = label_attr|merge({'for': id}) %}
            {% endif %}
            {% if required %}
                {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
            {% endif %}
            {% if errors|length > 0 %}
                {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' validation-error')|trim}) %}
            {% endif %}
            {% if label is empty %}
                {% if label_format is not empty -%}
                    {% set label = label_format|replace({'%name%': name, '%id%': id}) %}
                {% else %}
                    {% set label = name|humanize %}
                {% endif %}
            {% endif %}
            {% set isRadioLabel = form.parent.vars.expanded|default(false) and checked is defined %}
            {% if tooltip is defined and tooltip %}
                {% import 'OroUIBundle::macros.html.twig' as ui %}
                {{ ui.tooltip(
                tooltip,
                tooltip_parameters|default({}),
                tooltip_placement|default(null),
                tooltip_details_enabled|default(false),
                tooltip_details_link|default(null),
                tooltip_details_anchor|default(null)
                ) }}
            {%- endif -%}

            <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {%- if translatable_label is defined and not translatable_label -%}
                {{ label }}
            {%- elseif raw_label is defined and raw_label -%}
                {{ label|raw }}
            {%- else -%}
                {{ label|trans({}, translation_domain) }}
            {%- endif -%}
            <em>{% if required and not isRadioLabel %}*{% else %}&nbsp;{% endif %}</em>
            </label>
        {%- endif -%}
    {% endspaceless %}
{%- endblock form_label -%}

{% block form_widget_simple %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' input input--full'
    }) %}

    {{ parent() }}
{% endblock %}

{% block textarea_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' textarea textarea--full'
    }) %}

    {{ parent() }}
{% endblock %}

{%- block form_row -%}
    {% set class_prefix = form.vars.class_prefix|default(class_prefix|default('')) %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': " form-field-" ~ form.vars.name,
        placeholder: label|default('')
    }) %}

    <fieldset class="{{ class_prefix }}__form__row">
        <div class="{{ class_prefix }}__form__col form__col form__col_x12">
            {{- form_label(form, null, {'class_prefix': class_prefix}) -}}
            {{- form_widget(form, {
                'class_prefix': class_prefix,
                attr: attr
            }) -}}
            {{- form_errors(form, {'class_prefix': class_prefix}) -}}
        </div>
    </fieldset>
{%- endblock form_row -%}

{% block widget_attributes %}
    {% if errors|length > 0 %}
        {% set attr = layout_attr_defaults(attr, {
            '~class': ' error'
        }) %}
    {% endif %}

    {{ parent() }}
{% endblock widget_attributes %}

{%- block form_errors -%}
    {%- if errors|length > 0 -%}
        <div class="notification--error">
            <ul class="notification__list">
                {%- for error in errors -%}
                    <li class="notification__item">
                        <i class="fa-exclamation-triangle"></i>
                        <span class="notification__text">{{ error.message|trans }}</span>
                    </li>
                {%- endfor -%}
            </ul>
        </div>
    {%- endif -%}
{%- endblock form_errors -%}

{%- block choice_widget_expanded -%}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' input-widget-select'
    }) %}
    <div {{ block('widget_container_attributes') }}>
        {%- for child in form %}
            {{- form_widget(child) -}}
        {% endfor -%}
    </div>
{%- endblock choice_widget_expanded -%}

{%- block choice_widget_collapsed %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' select select--full'
    }) %}

    {{ parent() }}
{% endblock %}

{% block checkbox_row %}
    {{- form_widget(form) -}}
    {{- form_errors(form) -}}
{% endblock %}

{%- block checkbox_widget -%}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' custom-checkbox__input'
    }) %}
    {%- if label is empty -%}
        {% set label = id|humanize %}
    {%- endif -%}

    <label for="{{ id }}" class="custom-checkbox">
        {{- parent() -}}
        <span class="custom-checkbox__icon"></span>
        <span class="custom-checkbox__text">{{ label|block_text(translation_domain) }}</span>
    </label>
{%- endblock checkbox_widget -%}

{%- block radio_widget -%}
    {% set class_prefix = form.vars.class_prefix|default(class_prefix|default('radio')) %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' custom-radio__control'
    }) %}

    {%- if label is empty -%}
        {% set label = id|humanize %}
    {%- endif -%}
    <label class="custom-radio {% if form.vars.checked %}checked{% endif %}" data-radio tabindex="0">
        {{- parent() -}}
        <span class="custom-radio__text">{{ label|block_text(translation_domain) }}</span>
    </label>
    {{- form_errors(form, {'class_prefix': class_prefix}) -}}
{%- endblock radio_widget -%}

{%- block oro_date_widget -%}
        {% if attribute(attr, 'data-validation') is defined %}
            {% set dateValidation = attr['data-validation'] %}
        {% else %}
            {% set dateValidation = {'Date' : {}} %}

            {% if required %}
                {% set dateValidation = dateValidation|merge({'NotBlank' : {'message': 'This value should not be blank.'}}) %}
            {% endif %}

            {% set dateValidation = dateValidation|json_encode %}
        {% endif %}

        {% set options = {
            component: 'oroui/js/app/components/view-component',
            view: 'oroui/js/app/views/datepicker/datepicker-view',
            screenType: 'desktop',
            dateInputAttrs: {
                placeholder: 'oro.form.choose_date'|trans,
                id: 'date_selector_' ~ id,
                name: 'date_selector_' ~ id,
                'data-validation': dateValidation,
                class: 'datepicker-input ' ~ (attribute(attr, 'class') is defined ? attr['class'] : ''),
            },
            datePickerOptions: {
                altFormat: 'yy-mm-dd',
                changeMonth: false,
                changeYear: false,
                yearRange: years|default('-80:+1'),
                showButtonPanel: true,
                maxDate: (attribute(datePickerOptions, 'maxDate') is defined ? datePickerOptions['maxDate'] : ''),
                minDate: (attribute(datePickerOptions, 'minDate') is defined ? datePickerOptions['minDate'] : '')
            }
        } %}

        {% set attr = attr|merge({
            'data-page-component-module': 'oroui/js/app/components/viewport-component',
            'data-page-component-options': options|json_encode(constant('JSON_FORCE_OBJECT'))
        }) %}

        {{ block('date_widget') }}
{%- endblock oro_date_widget -%}
